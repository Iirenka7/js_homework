console.log ('number' + 3 + 3) 
// 1) Result: number33 
// string + number  будет конкатинация/обьедение значения string and numberов 

console.log(null + 3) 
// 2) Result: 3 
// null считается как 0 , 0 + 3 = 3

console.log (5 && "qwerty") 
// 3) Result : qwerty
// Логический оператор && возвоащает последний операнд так как оба операнда = ИСТИНА, 1й операнд 5 > 0 это ИСТИНА 
// qwerty > пустая строка это ИСТИНА, если бы 0 && "qwerty" то результат = 5 так как 1й операнд ЛОЖЬ , 
//если есть хоть один False/ЛОЖЬ, вернется False

console.log (+'40' + +'2' + "hillel") ?
// 4) Result: 42hillel 
//Унарный + перед string преобразует ее в number. Бинарный + между 2 операндами . Еще раз преобразование string в number через бинарный + 
// после 2  +  будет конкатинировать/соеденять слово hillel

console.log('10' - 5 === 6)
// 5) Result: false 
// String 10 переводиться в number из за оператора "-"; 10- 5 = 5 ; 5 сравнивается с 6 , строгое равенство - === которое не приводит к числовому типу а сравнивает как есть 
// так как 5 не равно 6, оно меньше то получается ЛОЖЬ, если бы было бы 11-5 ==6 то было бы ИСТИНА  

console.log(Number(true) + Number (false))
//6) Result: 1 
// Добавление booling , считается true = 1 , false = 0 

console.log ('4px' - 3)
// 7) Result: NaN
// Так как хотим сделать арифмитеческое действие между string и number 

let str ='4', numb = 3
console.log(typeof str)
let num = Number(str)
console.log(typeof num)
console.log(num - numb)

console.log('4' - '3')
//8) Result:  1 
//'4'string преобразовало в number из за математического оператора '-'

console.log('6' + 3 ** 0);
// 9) Result : 61
// Сначала выполняется возведение в степень,  6 - string, string + number =  будет конкотинация/обьеденение, number ** 0 = возведение в 0ую степень, жто будет 1 
// 6 + 1 = конкатинация 61

console.log (12 / '6')
// 10)Result:  2 
// 12 это number , 6 это string но преобразовалось Динамически в number так как там число

console.log('10' + (5 === 6));
// 11) Result: 10false
// 5===6 - false, сначала выполняется то что в () ЛОЖЬ потому что 5 это не 6, далее string обьеденилось с booling , если было бы ('10' - (5 === 6))
// то результат был бы 10, так как 10 - false (0)

console.log(null == '') ? 
// 12) == это сравнение, '' считается пустой string, он считается false 

console.log(3 ** (9 / 3))
// 13) Result: 27 
// Сначаоа выполнение в скобках 9/3 = 3 ; возведение 3 в 3ю степень = 27

console.log(!!'false' == !!'true') 
// 14) Result: true
// !! перед string преобразовывает в booling в true так как строка НЕ пустая, == это сравнение , !! перед string преобразовывает в booling в true так как строка НЕ пустая
// не пустая  string == не пустая  string будет true , если бы было бы !!'' == !!'true'), было бы ЛОЖЬ так как 1ая страка пустая, значит 0 значит False

console.log (0 || '0' && 1)
// 15)  Result: 1
// 0 это false || - или оно всегда возвращает 1ую ИСТИНУ , "0" - true потому что не пустая строка и 1 это true , && если оба операнда true возврощает последний

console.log ((+null == false) < 1);
// 16)  Result: false
// + унарный перед null переобразует null в number, 0 == false(0), 0 сравнивается == с 0 получается true, true это 1 , 1 не меньше 1 (1<1)  

console.log  (false && true || true)
// 17)  Result: true
// Оператор && (логическое И) вернет false, если хотя бы один из его операндов ложный, 
// || (логическое ИЛИ) вернет true, если хотя бы один из его операндов истинный.

console.log  (false && (false || true));
// 18)  Result: false
// в () выполняется первое, || (логическое ИЛИ) вернет true, если хотя бы один из его операндов истинный.
// Оператор && (логическое И) вернет false, если хотя бы один из его операндов ложный

console.log  ((+null == false) < 1 ** 5);
// 19)  Result:false
//+null - преобразовало в число = 0 , == сравнило с false, а false это 0 , 0 == 0 выходит true, true это 1 
// потом 1 возводиться в степень 5 и выходит 1, 1 который true не меньше 1 ( 1<1) будет false 

